@import '_utils.scss';
@import '_defines.scss';

$anim-time: 0.5s;

h2, h3, h4 {
    margin-top: 4px;
    margin-bottom: 4px;
}
h2 {
    font-size: 19px;
}
h3, h4 {
    font-size: 16px;
}

h2 {
    &[label]:before {
        content: attr(label);
        position: absolute;
        left: -40px;
        background-color: white;
        border-radius: 50%;
        top: 3px;
        font-size: 10px;
        width: 25px;
        height: 25px;
        line-height: 25px;
        text-align: center;
        font-weight: bold;
        opacity: 1;
        box-shadow: 0 0 3px rgba(0, 0, 0, 0.1), 2px 2px 10px rgba(0, 0, 0, 0.1);
        @include transition(
            box-shadow $anim-time ease,
            background-color $anim-time ease,
            opacity $anim-time ease
        );
    }
    &.survey-survey[label]:before {
        background-color: mix($survey-colour, white, 50%);
        color: mix($survey-colour, black, 50%);
    }
    &.survey-function[label]:before {
        background-color: mix($function-colour, white, 50%);
        color: mix($function-colour, black, 50%);
    }
    &.survey-process[label]:before {
        background-color: mix($process-colour, white, 50%);
        color: mix($process-colour, black, 50%);
    }
    &.survey-subprocess[label]:before {
        background-color: mix($subprocess-colour, white, 50%);
        color: mix($subprocess-colour, black, 50%);
    }
    &.survey-measure[label]:before {
        background-color: mix($measure-colour, white, 50%);
        color: mix($measure-colour, black, 50%);
    }
}
.stacked-header {
    >h2:not(:last-child) {
        font-size: 16px;

        &[label]:before {
            top: 0px;
        }
        &[label]:not(:hover):before {
            box-shadow: 0 0 3px rgba(0, 0, 0, 0.0), 2px 2px 10px rgba(0, 0, 0, 0.0);
            background: transparent;
            opacity: 0.5;
        }
    }
}

.header {
    background: $primary-colour;
    position: relative;
    padding-top: 10px;
    padding-bottom: 10px;
    margin-bottom: 20px;

    h2 {
        .clock-progress {
            @include transform(scale(19/16));
            @include transform-origin(9px 1px);
        }
    }

    h2, h3, h4 {
        color: mix(black, $primary-colour, 70%);
        line-height: 1.6;
        position: relative;
        margin-top: 4px;
        margin-bottom: 4px;
        .clock-progress {
            position: absolute;
            top: 0.2em;
            right: 0;
        }
    }

    a {
        color: inherit;
    }
}

.subheader {
    margin-bottom: 20px;
    padding-top: 4px;
    padding-bottom: 4px;
}
.header+.subheader {
    margin-top: -20px;
}
.jumbotron+.subheader {
    margin-top: -30px;
}

.toolbar {
    float: right;
    position: relative;
    z-index: 1;
    margin-top: 4px;
}

/* Nested pages should have less prominent headers */
ng-include>.header, .nested>.header {
    background: transparent;
    margin-bottom: 10px;
    padding-bottom: 0;

    h2 {
        font-size: 16px;
    }
}

.measure {
    h5 {
        color: mix(black, white, 70%);
        line-height: 1.6;
        font-size: 19px;
    }

    $response-spacing: 10px;

    ol.responses {
        padding: 0;
        display: table;
        border-spacing: 0 $response-spacing;

        li {
            display: table-row;
            list-style: none;
            margin: 4px 0;
        }
        li>* {
            display: table-cell;
        }

        label {
            padding: 6px 30px 6px 0;
            font-weight: normal;
            line-height: 1.42857143;
            position: relative;

            &:before {
                @include fontawesome("\f0da");
                position: absolute;
                left: -12px;
            }
        }

        li {
            label {
                &:before {
                    visibility: hidden;
                    opacity: 0;
                }
            }

            .score, label:before {
                opacity: 0;
                visibility: hidden;
                @include transition(
                    opacity $anim-time ease,
                    visibility $anim-time step-end
                );
            }
            .score {
                color: #aaa;
            }
        }

        li.active {
            .btn:not([disabled]) .score, label:before {
                opacity: 1;
                visibility: visible;
                @include transition(
                    opacity $anim-time ease,
                    visibility $anim-time step-start
                );
            }
        }

        li.disabled {
            label {
                color: #888;
                pointer-events: none;
            }
        }
    }

    .comments-box {
        $default-height: 150px;

        border-top: 1px solid #cecece;
        position: relative;

        textarea {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: $default-height;
            border: none;
            background-color: rgba(white, 0.75);
            @include transition(
                background-color $anim-time ease
            );

            &.empty {
                background-color: rgba(white, 0);
            }
            &:focus {
                background-color: rgba(white, 1);
            }
        }
        label {
            pointer-events: none;
            text-align: center;
            font-size: $default-height / 1.5;
            font-weight: normal;
            line-height: $default-height;
            height: $default-height;
            margin: 0;
            padding: 0;
            color: #ccc;
            position: absolute;
            left: 0;
            right: 0;
            top: 0;
        }
    }
}

.text-hidden {
    visibility: hidden;
}
